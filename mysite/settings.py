"""
Django settings for mysite project.

Generated by 'django-admin startproject' using Django 2.1.

For more information on this file, see
https://docs.djangoproject.com/en/2.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.1/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '15-2rk(9v2(mk9t)81ap6a+^5lr46oa5l0))f@11w@noy%xexm'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True  # or False

ALLOWED_HOSTS = [] # 내가 어떤 주소로 접속했느냐?
# ALLOWED_HOSTS = []  # 디버그가 False 면 이게 안된다 ['*'] 로 해주든가 해야함


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes', # 작성한 모델들
    'django.contrib.sessions',
    'django.contrib.messages', # 오류메세지 처리용 앱
    'django.contrib.staticfiles',
    'polls', # config 파일을 수정하지 않았으면 그냥 해도 되는데, 이건 따로 습관들이자
    'bookmark',
]

MIDDLEWARE = [ # 보안사항 등 웹과 장고 사이에서 도는 코드
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'mysite.urls' # 첫번째 조회할꺼. index.html 같은거

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates', # 템플릿 해석 엔진
        'DIRS': [os.path.join(BASE_DIR, 'templates')], # 이 외에 템플릿 폴더가 따로 있으면 여기에 넣으라. os.path.join(BASE_DIR : 프로젝트 최상위 폴더로 감
        'APP_DIRS': True, # 템플릿을 찾을때 앱 폴더 안에서 찾아라
        'OPTIONS': {
            'context_processors': [ # 모든 페이지에서 기본적으로 가져와야 하는 기능과 뷰들
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'mysite.wsgi.application' # 어플리케이션 구동 연결


# Database
# https://docs.djangoproject.com/en/2.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Seoul'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.1/howto/static-files/

STATIC_URL = '/static/'
# 가상 url. 보안을 위해서 가짜 url을 생성해서 보여준다
# 실제 경로